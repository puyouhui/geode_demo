{"remainingRequest":"/Users/puyouhui/Desktop/项目测试/gd_demo/node_modules/babel-loader/lib/index.js!/Users/puyouhui/Desktop/项目测试/gd_demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/puyouhui/Desktop/项目测试/gd_demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/puyouhui/Desktop/项目测试/gd_demo/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/puyouhui/Desktop/项目测试/gd_demo/src/views/Home.vue","mtime":1653879595692},{"path":"/Users/puyouhui/Desktop/项目测试/gd_demo/babel.config.js","mtime":1653623819098},{"path":"/Users/puyouhui/Desktop/项目测试/gd_demo/node_modules/cache-loader/dist/cjs.js","mtime":1653187763854},{"path":"/Users/puyouhui/Desktop/项目测试/gd_demo/node_modules/babel-loader/lib/index.js","mtime":1653187763859},{"path":"/Users/puyouhui/Desktop/项目测试/gd_demo/node_modules/cache-loader/dist/cjs.js","mtime":1653187763854},{"path":"/Users/puyouhui/Desktop/项目测试/gd_demo/node_modules/vue-loader/lib/index.js","mtime":1653187776071}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEFNYXBMb2FkZXIgZnJvbSAnQGFtYXAvYW1hcC1qc2FwaS1sb2FkZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtYXA6IG51bGwsCiAgICAgIHBvbHlsaW5lOiBbXSwKICAgICAgLy/lnZDmoIfnu4QKICAgICAgQU1hcDogbnVsbCwKICAgICAgbnVtOiAwCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdE1hcCgpOwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdE1hcDogZnVuY3Rpb24gaW5pdE1hcCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIEFNYXBMb2FkZXIubG9hZCh7CiAgICAgICAga2V5OiAnMTJhMmY0MDRjNWFiMjNmZjQ5ODA0YWYzZWJmMjQ4ZWUnLAogICAgICAgIHZlcnNpb246ICcyLjAnLAogICAgICAgIHBsdWdpbnM6IFsnQU1hcC5FbGFzdGljTWFya2VyJywgJ1BpeGVsJ10sCiAgICAgICAgTG9jYTogewogICAgICAgICAgLy8g5piv5ZCm5Yqg6L29IExvY2HvvIwg57y655yB5LiN5Yqg6L29CiAgICAgICAgICB2ZXJzaW9uOiAnMi4wLjAnIC8vIExvY2Eg54mI5pys77yM57y655yBIDEuMy4yCgogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAoQU1hcCkgewogICAgICAgIF90aGlzLkFNYXAgPSBBTWFwOwogICAgICAgIF90aGlzLm1hcCA9IG5ldyBBTWFwLk1hcCgnaG9tZScsIHsKICAgICAgICAgIC8vIOiuvue9ruWcsOWbvuWuueWZqGlkCiAgICAgICAgICByb3RhdGVFbmFibGU6IHRydWUsCiAgICAgICAgICBwaXRjaEVuYWJsZTogdHJ1ZSwKICAgICAgICAgIHRlcnJhaW46IHRydWUsCiAgICAgICAgICBwaXRjaDogODUsCiAgICAgICAgICBtYXBTdHlsZTogJ2FtYXA6Ly9zdHlsZXMvbm9ybWFsJywKICAgICAgICAgIHZpZXdNb2RlOiAnMkQnLAogICAgICAgICAgc2hvd0xhYmVsOiBmYWxzZSwKICAgICAgICAgIGxheWVyczogW25ldyBBTWFwLlRpbGVMYXllci5TYXRlbGxpdGUoKV0sCiAgICAgICAgICB6b29tOiAxNywKICAgICAgICAgIGNlbnRlcjogWzEwMy40NDg3MzUsIDIzLjI5NjgxXSAvLyDliJ3lp4vljJblnLDlm77kuK3lv4PngrnkvY3nva4KCiAgICAgICAgfSk7IC8vIOWkqeWcsOWbvuagheagvOWbvuWxguWKoOi9vQogICAgICAgIC8vIGNvbnN0IGdvb2dsZUxheWVyID0gbmV3IEFNYXAuVGlsZUxheWVyKHsKICAgICAgICAvLyAgIGdldFRpbGVVcmw6ICdodHRwOi8vdDAudGlhbmRpdHUuZ292LmNuL0RhdGFTZXJ2ZXI/VD1pbWdfdyZ0az1iMTI1MDFkMTJmNzE0MjVlYTZiMGYyYTRlZDllYjYzYSZ4PVt4XSZ5PVt5XSZsPVt6XScsCiAgICAgICAgLy8gICB6SW5kZXg6IDIKICAgICAgICAvLyB9KQogICAgICAgIC8vIGdvb2dsZUxheWVyLnNldE1hcCh0aGlzLm1hcCkKICAgICAgICAvLyDlnLDlm77liqDovb3lrozmiJDlkI7miafooYwKCiAgICAgICAgX3RoaXMubWFwLm9uKCdjbGljaycsIF90aGlzLkFkZFNvbWUpOwogICAgICB9KTsKICAgIH0sCiAgICBBZGRNYXJrZXI6IGZ1bmN0aW9uIEFkZE1hcmtlcihlKSB7CiAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB0aGlzLm51bSsrOwogICAgICB2YXIgbWFya2VyID0gbmV3IHRoaXMuQU1hcC5NYXJrZXIoewogICAgICAgIHBvc2l0aW9uOiBbZS5sbmdsYXQubG5nLCBlLmxuZ2xhdC5sYXRdLAogICAgICAgIG1hcDogdGhpcy5tYXAsCiAgICAgICAgbGFiZWw6IHsKICAgICAgICAgIGNvbnRlbnQ6ICc8ZGl2PicgKyAn56ysJyArIHRoaXMubnVtICsgJ+S4quagh+eCuScgKyAnPC9kaXY+JywKICAgICAgICAgIG9mZnNldDogbmV3IHRoaXMuQU1hcC5QaXhlbCgwLCAwKSwKICAgICAgICAgIGRpcmVjdGlvbjogJ3RvcCcsCiAgICAgICAgICB6SW5kZXg6IDEwMAogICAgICAgIH0sCiAgICAgICAgaWNvbjogbmV3IHRoaXMuQU1hcC5JY29uKHsKICAgICAgICAgIHNpemU6IG5ldyB0aGlzLkFNYXAuU2l6ZSgxOSwgMzEpLAogICAgICAgICAgLy/lm77moIflpKflsI8KICAgICAgICAgIGltYWdlOiAnaHR0cHM6Ly93ZWJhcGkuYW1hcC5jb20vdGhlbWUvdjEuMy9tYXJrZXJzL24vbWFya19iLnBuZycsCiAgICAgICAgICBpbWFnZU9mZnNldDogbmV3IHRoaXMuQU1hcC5QaXhlbCgwLCAwKSwKICAgICAgICAgIGltYWdlU2l6ZTogbmV3IHRoaXMuQU1hcC5TaXplKDE5LCAzMSkKICAgICAgICB9KSwKICAgICAgICBvZmZzZXQ6IG5ldyB0aGlzLkFNYXAuUGl4ZWwoLTEwLCAtMzEpIC8v55u45a+55LqO5Z+654K555qE5YGP56e75L2N572uCgogICAgICB9KTsKICAgICAgbWFya2VyLnNldE1hcCh0aGlzLm1hcCk7CiAgICAgIHRoaXMucG9seWxpbmUucHVzaChlLmxuZ2xhdC5sbmcgKyAnLCcgKyBlLmxuZ2xhdC5sYXQpOyAvLyB0aGlzLm1hcC5hZGQobWFya2VyKQoKICAgICAgY29uc29sZS5sb2codGhpcy5wb2x5bGluZSk7CiAgICB9LAogICAgLy/nlJ/miJDmipjnur8KICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge30sCiAgICBBZGRTb21lOiBmdW5jdGlvbiBBZGRTb21lKHZhbHVlKSB7CiAgICAgIHRoaXMuQWRkTWFya2VyKHZhbHVlKTsKICAgIH0sCiAgICBMaW5lRHJhdzogZnVuY3Rpb24gTGluZURyYXcoKSB7Ly8KICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;AASA;AACA;EACAA,YADA;EAEAC,cAFA;EAIAC,IAJA,kBAIA;IACA;MACAC,SADA;MAEAC,YAFA;MAEA;MACAC,UAHA;MAIAC;IAJA;EAMA,CAXA;EAYAC,OAZA,qBAYA;IACA;EACA,CAdA;EAeAC;IACAC,OADA,qBACA;MAAA;;MACAC;QACAC,uCADA;QAEAC,cAFA;QAGAC,wCAHA;QAIAC;UACA;UACAF,gBAFA,CAEA;;QAFA;MAJA,GAQAG,IARA,CAQA;QACA;QACA;UACA;UACAC,kBAFA;UAGAC,iBAHA;UAIAC,aAJA;UAKAC,SALA;UAMAC,gCANA;UAOAC,cAPA;UAQAC,gBARA;UASAC,wCATA;UAUAC,QAVA;UAWAC,8BAXA,CAWA;;QAXA,GAFA,CAeA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;MACA,CA/BA;IAgCA,CAlCA;IAmCAC,SAnCA,qBAmCAC,CAnCA,EAmCA;MACAC;MACA;MACA;QACAC,sCADA;QAEA1B,aAFA;QAGA2B;UACAC,oDADA;UAEAC,iCAFA;UAGAC,gBAHA;UAIAC;QAJA,CAHA;QASAC;UACAC,gCADA;UACA;UACAC,gEAFA;UAGAC,sCAHA;UAIAC;QAJA,EATA;QAeAP,qCAfA,CAeA;;MAfA;MAiBAQ;MACA,sDArBA,CAsBA;;MACAZ;IACA,CA3DA;IA4DA;IACAa,MA7DA,oBA6DA,CAEA,CA/DA;IAgEAC,OAhEA,mBAgEAC,KAhEA,EAgEA;MACA;IACA,CAlEA;IAoEAC,QApEA,sBAoEA,CACA;IAEA;EAvEA;AAfA","names":["name","components","data","map","polyline","AMap","num","mounted","methods","initMap","AMapLoader","key","version","plugins","Loca","then","rotateEnable","pitchEnable","terrain","pitch","mapStyle","viewMode","showLabel","layers","zoom","center","AddMarker","e","console","position","label","content","offset","direction","zIndex","icon","size","image","imageOffset","imageSize","marker","remove","AddSome","value","LineDraw"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\n  <div id=\"home\" style=\"width: 100%;height:100vh;\">\n      <div @click=\"remove\" class=\"remove\">\n        画折线\n      </div>\n  </div>\n</template>\n\n<script>\nimport AMapLoader from '@amap/amap-jsapi-loader'\nexport default {\n  name: 'Home',\n  components: {\n  },\n  data() {\n    return {\n      map: null,\n      polyline: [],//坐标组\n      AMap: null,\n      num: 0,\n    }\n  },\n  mounted() {\n    this.initMap()\n  },\n  methods: {\n    initMap(){\n      AMapLoader.load({\n        key: '12a2f404c5ab23ff49804af3ebf248ee',\n        version: '2.0',\n        plugins: ['AMap.ElasticMarker', 'Pixel'],\n        Loca: {\n          // 是否加载 Loca， 缺省不加载\n          version: '2.0.0' // Loca 版本，缺省 1.3.2\n        }\n      }).then((AMap) => {\n        this.AMap = AMap\n        this.map = new AMap.Map('home', {\n          // 设置地图容器id\n          rotateEnable: true,\n          pitchEnable: true,\n          terrain: true,\n          pitch: 85,\n          mapStyle: 'amap://styles/normal',\n          viewMode: '2D',\n          showLabel: false,\n          layers: [new AMap.TileLayer.Satellite()],\n          zoom: 17,\n          center: [103.448735,23.29681] // 初始化地图中心点位置\n        })\n        // 天地图栅格图层加载\n        // const googleLayer = new AMap.TileLayer({\n        //   getTileUrl: 'http://t0.tianditu.gov.cn/DataServer?T=img_w&tk=b12501d12f71425ea6b0f2a4ed9eb63a&x=[x]&y=[y]&l=[z]',\n        //   zIndex: 2\n        // })\n        // googleLayer.setMap(this.map)\n        // 地图加载完成后执行\n        this.map.on('click',this.AddSome)\n      })\n    },\n    AddMarker(e){\n      console.log(e)\n      this.num++\n      const marker = new this.AMap.Marker({\n        position: [e.lnglat.lng, e.lnglat.lat],\n        map: this.map,\n        label: {\n          content: '<div>' + '第' + this.num + '个标点' + '</div>',\n          offset: new this.AMap.Pixel(0, 0),\n          direction: 'top',\n          zIndex: 100\n        },\n        icon: new this.AMap.Icon({\n          size: new this.AMap.Size(19, 31),  //图标大小\n          image: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\n          imageOffset: new this.AMap.Pixel(0, 0),\n          imageSize: new this.AMap.Size(19, 31),\n        }),\n        offset: new this.AMap.Pixel(-10, -31), //相对于基点的偏移位置\n      })\n      marker.setMap(this.map)\n      this.polyline.push(e.lnglat.lng+','+e.lnglat.lat)\n      // this.map.add(marker)\n      console.log(this.polyline)\n    },\n    //生成折线\n    remove(){\n\n    },\n    AddSome(value){\n      this.AddMarker(value)\n    },\n\n    LineDraw(){\n      //\n\n    }\n  },\n}\n</script>\n\n\n<style>\n.remove{\n  z-index: 999999;\n  background-color: #fff;\n}\n</style>\n"]}]}